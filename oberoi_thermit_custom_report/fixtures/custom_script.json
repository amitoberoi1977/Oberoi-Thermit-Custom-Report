[
 {
  "docstatus": 0,
  "doctype": "Custom Script",
  "dt": "Payment Entry",
  "modified": "2025-05-11 20:00:06.460621",
  "name": "Payment Entry-Client",
  "parent": null,
  "parentfield": null,
  "parenttype": null,
  "script": "frappe.ui.form.on(\"Payment Entry\", {\n    setup:function(frm){\n\t\tfrm.set_query(\"site_expense\", function(){\n\t\t\treturn {\n\t\t\t\tfilters : {\n\t\t\t\t\t\"sales_order\":frm.doc.sales_order,\n\t\t\t\t\t\"payment_amount_received\":[\"is\",\"not set\"]\n\t\t\t\t}\n\t\t\t};\n\t\t}); \n    },\n    onload:function(frm) {\n        if(frm.doc.__islocal && frm.doc.payment_type == \"Pay\"){\n            if(frappe.session.user != \"Administrator\") {\n                frappe.msgprint(\"System not allow direct entry\")\n                frappe.set_route(\"List\",\"Payment Entry\")\n                 setTimeout(function() { \n                            location.reload()\n                    }, 1000);\n            }\n            console.log(frm)\n        }  \n    },\n    payment_type: function(frm,cdt,cdn) {\n        var doc = locals[cdt][cdn];\n        if(doc.payment_type == \"Pay\") {\n            if(frappe.session.user != \"Administrator\") {\n                frappe.msgprint(\"System not allow direct entry\")\n                frappe.set_route(\"List\",\"Payment Entry\")\n                    setTimeout(function() { \n                            location.reload()\n                    }, 1000);\n            }\n\n        }\n    },\n    before_save: function(frm) {\n        if(frm.doc.__islocal && frm.doc.payment_type != \"Receive\"){\n            console.log(frappe.session.user)\n            if(frappe.session.user != \"Administrator\") {\n                frappe.msgprint(\"System not allow direct entry\")\n                frappe.set_route(\"List\",\"Payment Entry\")\n            }\n            console.log(frm)\n        }  \n    },\n    on_submit: function(frm){\n        balance_calculation(frm)\n      \n    },\n    after_cancel:function(frm){\n        balance_calculation(frm)\n    },\n    refresh: function(frm) {\n        var total=0;\n        if(frm.doc.otpl_ref_doctype){\n            frm.set_df_property('business_vertical', 'read_only', 1);\n        }else{\n            frm.set_df_property('business_vertical', 'read_only', 0);\n        }\n        frm.add_custom_button(__(\"Proforma Invoice\"), function() {\n            frappe.set_route('List','Proforma Invoice',{'name':frm.doc.proforma_invoice})\n        }, __(\"View\"));\n        \n\n            var execution_total=0;\n           \n            var item_count=0;\n            var index_count=0;\n            $.each(frm.doc.references, function(idx, item){\n            \n                item_count++;\n                \n            })\n            $.each(frm.doc.references, function(idx, item){\n                if(item.reference_doctype==\"Sales Invoice\"){\n                    frappe.db.get_value(\"Sales Invoice\",item.reference_name, \"customer_name\",(s)=>{\n                        frappe.db.get_value(\"Customer\",s.customer_name, \"customer_group\",(r)=>{\n                            if(r.customer_group==\"Railway\"){\n                                var supply_count=0;\n                                var execution_count=0;\n                                frappe.model.with_doc(\"Sales Invoice\", item.reference_name, function() {\n                                    var tabletransfer= frappe.model.get_doc(\"Sales Invoice\", item.reference_name)\n                                    index_count++;\n                                    $.each(tabletransfer.items, function(index, row){\n                                        if(row.warehouse==\"Store Unit I Haridwar - OTPL\" || row.warehouse==\"Store Unit II Haridwar - OTPL\" || row.warehouse==\"Store Unit I Noida - OTPL\" || row.warehouse==\"Store Unit II Noida - OTPL\"){\n                                            supply_count++;\n                                        }\n                                        else{\n                                            execution_count++;\n                                        }\n                                    })\n                                    if(supply_count>0){\n                                        total+=item.allocated_amount;\n                                    }\n                                    if(index_count==item_count){\n                                        if(frm.doc.payment_supply_amount!=total){\n                                            frappe.call({\n    \t\t\t\t                            async: false,\n    \t\t\t\t                            \"method\": \"frappe.client.set_value\",\n    \t\t\t\t                            \"args\": {\n    \t\t\t\t                                \"doctype\": \"Payment Entry\",\n    \t\t\t\t                                \"name\": frm.doc.name,\n    \t\t\t\t                                \"fieldname\": \"payment_supply_amount\",\n    \t\t\t\t                                \"value\":total\n    \t\t\t\t                            }\n    \t\t\t\t                        });\n                                        }\n                                    }   \n                                    \n                                    if(execution_count>0){\n                                        execution_total+=item.allocated_amount;\n                                    }\n                                    if(index_count==item_count){\n                                        if(frm.doc.payment_execution_amount!=execution_total){\n                                            frappe.call({\n    \t\t\t\t                            async: false,\n    \t\t\t\t                            \"method\": \"frappe.client.set_value\",\n    \t\t\t\t                            \"args\": {\n    \t\t\t\t                                \"doctype\": \"Payment Entry\",\n    \t\t\t\t                                \"name\": frm.doc.name,\n    \t\t\t\t                                \"fieldname\": \"payment_execution_amount\",\n    \t\t\t\t                                \"value\":execution_total\n    \t\t\t\t                            }\n    \t\t\t\t                        });\n                                        }\n                                    }\n                                })\n                            }\n                        })\n                    })\n                }\n            })\n    }\n});\n\nfunction balance_calculation(frm){\n    frappe.db.get_value(\"Sales Order\",frm.doc.sales_order, \"customer_group\",(cg)=>{\n        frappe.db.get_value(\"Sales Order\",frm.doc.sales_order, \"customer\",(c)=>{\n            if(cg.customer_group==\"Private\"){\n                if(c.customer==frm.doc.party){\n                    var pe_bal=0;\n                    frappe.call({\n                        method: \"frappe.client.get_list\",\n                        args: {\n                            doctype: \"Payment Entry\",\n                            fields: [\"base_paid_amount\",\"sales_order\",\"name\"],\n                            filters:{\n                                \"sales_order\":frm.doc.sales_order,\n                                \"docStatus\":1\n                            },\n                        },\n                        callback: function(s) {\n                            for(var i=0;i<s.message.length;i++){\n                                pe_bal+=s.message[i].base_paid_amount\n                            }\n                            var pi_bal=0;\n                            frappe.call({\n                                method: \"frappe.client.get_list\",\n                                args: {\n                                    doctype: \"Proforma Invoice\",\n                                    fields: [\"total_including_tax\",\"sales_order\",\"name\"],\n                                    filters:{\n                                        \"sales_order\":frm.doc.sales_order,\n                                        \"docStatus\":1\n                                    },\n                                },\n                                callback: function(p) {\n                                    for(var i=0;i<p.message.length;i++){\n                                        pi_bal+=p.message[i].total_including_tax\n                                    }\n                                    var bal;\n                                    bal=pi_bal-pe_bal\n                                    if(bal!=frm.doc.balance_amount){\n                                        frappe.call({\n                                            async: false,\n                                            \"method\": \"frappe.client.set_value\",\n                                            \"args\": {\n                                                \"doctype\": \"Sales Order\",\n                                                \"name\": frm.doc.sales_order,\n                                                \"fieldname\": \"balance_amount\",\n                                                \"value\":bal\n                                            }\n                                        });\n                                        cur_frm.refresh_fields()\n                                    }\n                                }\n                            })\n                        }\n                   })\n                }\n                else{\n                    msgprint('Customer Name does not match to the Sales Order', 'Alert')\n                }\n            }\n        })\n    })\n}"
 }
]